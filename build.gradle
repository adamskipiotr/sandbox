plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
	id("org.sonarqube") version "4.2.1.3168"

}


group = 'com.pada'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-graphql:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.0.4'
	// https://mvnrepository.com/artifact/org.springframework/spring-websocket
	implementation group: 'org.springframework', name: 'spring-websocket', version: '6.0.10'
// https://mvnrepository.com/artifact/org.springframework/spring-messaging
	implementation group: 'org.springframework', name: 'spring-messaging', version: '6.0.10'

	implementation 'com.graphql-java:graphql-java:20.4'
	// https://mvnrepository.com/artifact/com.graphql-java-kickstart/playground-spring-boot-starter
	runtimeOnly group: 'com.graphql-java-kickstart', name: 'playground-spring-boot-starter', version: '5.10.0'

	// https://mvnrepository.com/artifact/org.flywaydb/flyway-core
	implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.19.3'

	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'
	// https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
	implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.1.0'
	// https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa
	implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '3.1.0'
	// https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
	implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.0.Final'
	implementation 'org.projectlombok:lombok:1.18.26'
	runtimeOnly 'org.postgresql:postgresql:42.5.4'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	// https://mvnrepository.com/artifact/org.projectlombok/lombok-mapstruct-binding
	implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'
	// https://mvnrepository.com/artifact/org.mapstruct/mapstruct
	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.5.Final'
	// https://mvnrepository.com/artifact/org.mapstruct/mapstruct-processor
	implementation group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.5.5.Final'

	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	//Needed for Specification<> to generate metamodel classes for entities
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen:6.1.7.Final'


	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework:spring-webflux:6.0.6'
	testImplementation 'org.springframework.graphql:spring-graphql-test:1.2.0'
	testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
	// https://mvnrepository.com/artifact/org.testcontainers/testcontainers
	testImplementation group: 'org.testcontainers', name: 'testcontainers', version: '1.18.3'
	// https://mvnrepository.com/artifact/org.springframework/spring-aop
	implementation group: 'org.springframework', name: 'spring-aop', version: '6.0.10'
	// https://mvnrepository.com/artifact/org.aspectj/aspectjweaver
	runtimeOnly group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.19'
	// https://mvnrepository.com/artifact/org.testcontainers/postgresql
	testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.18.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava {
	options.annotationProcessorPath = configurations.annotationProcessor

	// if you need to configure mapstruct component model
	options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
}


sonar {
	properties {
		property "sonar.projectKey", "adamskipiotr_sandbox"
		property "sonar.organization", "adamskipiotr"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
